"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[498],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return c}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function u(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?u(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):u(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},u=Object.keys(e);for(n=0;n<u.length;n++)r=u[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(e);for(n=0;n<u.length;n++)r=u[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),p=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,u=e.originalType,i=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),k=p(r),c=a,d=k["".concat(i,".").concat(c)]||k[c]||f[c]||u;return r?n.createElement(d,l(l({ref:t},s),{},{components:r})):n.createElement(d,l({ref:t},s))}));function c(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var u=r.length,l=new Array(u);l[0]=k;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var p=2;p<u;p++)l[p]=r[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}k.displayName="MDXCreateElement"},8250:function(e,t,r){r.r(t),r.d(t,{assets:function(){return s},contentTitle:function(){return i},default:function(){return c},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return f}});var n=r(7462),a=r(3366),u=(r(7294),r(3905)),l=["components"],o={title:"Future<Result<Ok, Error>>",sidebar_label:"Future<Result> helpers"},i=void 0,p={unversionedId:"future-result",id:"future-result",title:"Future<Result<Ok, Error>>",description:"A Future can contain a Result (e.g. to represent an asynchronous value that can fail). We provide some utility functions to deal with that case without having to unwrap the Future result.",source:"@site/docs/future-result.md",sourceDirName:".",slug:"/future-result",permalink:"/boxed/future-result",editUrl:"https://github.com/swan-io/boxed/edit/main/docs/docs/future-result.md",tags:[],version:"current",frontMatter:{title:"Future<Result<Ok, Error>>",sidebar_label:"Future<Result> helpers"},sidebar:"docs",previous:{title:"Future<Value>",permalink:"/boxed/future"},next:{title:"Deferred",permalink:"/boxed/deferred"}},s={},f=[{value:".mapResult(f)",id:"mapresultf",level:2},{value:".mapOk(f)",id:"mapokf",level:2},{value:".mapError(f)",id:"maperrorf",level:2},{value:".flatMapOk(f)",id:"flatmapokf",level:2},{value:".flatMapError(f)",id:"flatmaperrorf",level:2},{value:".tapOk(f)",id:"tapokf",level:2},{value:".tapError(f)",id:"taperrorf",level:2}],k={toc:f};function c(e){var t=e.components,r=(0,a.Z)(e,l);return(0,u.kt)("wrapper",(0,n.Z)({},k,r,{components:t,mdxType:"MDXLayout"}),(0,u.kt)("p",null,"A ",(0,u.kt)("a",{parentName:"p",href:"./future"},"Future")," can contain a ",(0,u.kt)("inlineCode",{parentName:"p"},"Result")," (e.g. to represent an asynchronous value that can fail). We provide some utility functions to deal with that case without having to unwrap the Future result."),(0,u.kt)("h2",{id:"mapresultf"},".mapResult(f)"),(0,u.kt)("p",null,"Takes a ",(0,u.kt)("inlineCode",{parentName:"p"},"Future<Result<Ok, Error>>")," and a ",(0,u.kt)("inlineCode",{parentName:"p"},"f")," function taking ",(0,u.kt)("inlineCode",{parentName:"p"},"Ok")," and returning ",(0,u.kt)("inlineCode",{parentName:"p"},"Result<ReturnValue, Error>")," and returns a new ",(0,u.kt)("inlineCode",{parentName:"p"},"Future<Result<ReturnValue, Error>>")),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-ts"},'Future.value(Result.Ok(3)).mapResult((ok) => {\n  return Result.Ok(ok * 2);\n}); // Future<Ok<6>>\n\nFuture.value(Result.Ok(3)).mapResult((ok) => {\n  if (ok % 2 === 0) {\n    return Result.Ok(ok);\n  } else {\n    return Result.Error("Odd number");\n  }\n}); // Future<Error<"Odd number">>\n')),(0,u.kt)("h2",{id:"mapokf"},".mapOk(f)"),(0,u.kt)("p",null,"Takes a ",(0,u.kt)("inlineCode",{parentName:"p"},"Future<Result<Ok, Error>>")," and a ",(0,u.kt)("inlineCode",{parentName:"p"},"f")," function taking ",(0,u.kt)("inlineCode",{parentName:"p"},"Ok")," and returning ",(0,u.kt)("inlineCode",{parentName:"p"},"ReturnValue")," and returns a new ",(0,u.kt)("inlineCode",{parentName:"p"},"Future<Result<ReturnValue, Error>>")),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-ts"},'Future.value(Result.Ok(3)).mapOk((ok) => {\n  return ok * 2;\n}); // Future<Ok<6>>\n\nFuture.value(Result.Error("something")).mapOk((ok) => {\n  return ok * 2;\n}); // Future<Error<"something">>\n')),(0,u.kt)("h2",{id:"maperrorf"},".mapError(f)"),(0,u.kt)("p",null,"Takes a ",(0,u.kt)("inlineCode",{parentName:"p"},"Future<Result<Ok, Error>>")," and a ",(0,u.kt)("inlineCode",{parentName:"p"},"f")," function taking ",(0,u.kt)("inlineCode",{parentName:"p"},"Error")," and returning ",(0,u.kt)("inlineCode",{parentName:"p"},"ReturnValue")," and returns a new ",(0,u.kt)("inlineCode",{parentName:"p"},"Future<Result<Ok, ReturnValue>>")),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-ts"},'Future.value(Result.Error(3)).mapError((error) => {\n  return error * 2;\n}); // Future<Error<6>>\n\nFuture.value(Result.Ok("something")).mapError((ok) => {\n  return ok * 2;\n}); // Future<Ok<"something">>\n')),(0,u.kt)("h2",{id:"flatmapokf"},".flatMapOk(f)"),(0,u.kt)("p",null,"Takes a ",(0,u.kt)("inlineCode",{parentName:"p"},"Future<Result<Ok, Error>>")," and a ",(0,u.kt)("inlineCode",{parentName:"p"},"f")," function taking ",(0,u.kt)("inlineCode",{parentName:"p"},"Ok")," returning a ",(0,u.kt)("inlineCode",{parentName:"p"},"Future<Result<ReturnValue, Error>>")),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-ts"},"future.flatMapOk((ok) => Future.value(Result.Ok(1)));\n")),(0,u.kt)("h2",{id:"flatmaperrorf"},".flatMapError(f)"),(0,u.kt)("p",null,"Takes a ",(0,u.kt)("inlineCode",{parentName:"p"},"Future<Result<Ok, Error>>")," and a ",(0,u.kt)("inlineCode",{parentName:"p"},"f")," function taking ",(0,u.kt)("inlineCode",{parentName:"p"},"Error")," returning a ",(0,u.kt)("inlineCode",{parentName:"p"},"Future<Result<Ok, ReturnValue>>")),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-ts"},"future.flatMapError((error) => Future.value(Result.Ok(1)));\n")),(0,u.kt)("h2",{id:"tapokf"},".tapOk(f)"),(0,u.kt)("p",null,"Runs ",(0,u.kt)("inlineCode",{parentName:"p"},"f")," if value is ",(0,u.kt)("inlineCode",{parentName:"p"},"Ok")," with the future value, and returns the original future. Useful for debugging."),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-ts"},"future.tapOk(console.log);\n")),(0,u.kt)("h2",{id:"taperrorf"},".tapError(f)"),(0,u.kt)("p",null,"Runs ",(0,u.kt)("inlineCode",{parentName:"p"},"f")," if value is ",(0,u.kt)("inlineCode",{parentName:"p"},"Error")," with the future value, and returns the original future. Useful for debugging."),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-ts"},"future.tapError(console.log);\n")))}c.isMDXComponent=!0}}]);