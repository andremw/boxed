"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[162],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,f=d["".concat(p,".").concat(m)]||d[m]||c[m]||i;return n?r.createElement(f,l(l({ref:t},u),{},{components:n})):r.createElement(f,l({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9390:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return c}});var r=n(3117),a=n(102),i=(n(7294),n(3905)),l=["components"],o={title:"Getting started",sidebar_label:"Getting started"},p="Getting started",s={unversionedId:"getting-started",id:"getting-started",title:"Getting started",description:"Boxed provides functional utility types and functions, while focusing on ease-of-use.",source:"@site/docs/getting-started.md",sourceDirName:".",slug:"/getting-started",permalink:"/boxed/getting-started",editUrl:"https://github.com/swan-io/boxed/edit/main/docs/docs/getting-started.md",tags:[],version:"current",frontMatter:{title:"Getting started",sidebar_label:"Getting started"},sidebar:"docs",next:{title:"Core Concepts",permalink:"/boxed/core-concepts"}},u={},c=[{value:"Design principles",id:"design-principles",level:2},{value:"What&#39;s in the box?",id:"whats-in-the-box",level:2},{value:"Install",id:"install",level:2},{value:"Inspirations",id:"inspirations",level:2}],d={toc:c};function m(e){var t=e.components,n=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"getting-started"},"Getting started"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Boxed")," provides functional utility types and functions, while focusing on ease-of-use."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'const make = (input) =>\n  Option.fromNullable(input)\n    .map(parseInput)\n    .flatMap((input) => Option.fromNullable(transform(input)))\n    .map(print)\n    .map(prettify)\n    .getWithDefault("fallback");\n')),(0,i.kt)("h2",{id:"design-principles"},"Design principles"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Provide utility types that ",(0,i.kt)("strong",{parentName:"li"},"make data-manipulation and storage easier")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Immutable")," (all provided types are)"),(0,i.kt)("li",{parentName:"ul"},"Give a ",(0,i.kt)("strong",{parentName:"li"},"good development experience")," (chaining API, reliable types)"),(0,i.kt)("li",{parentName:"ul"},"Simple ",(0,i.kt)("strong",{parentName:"li"},"interoperability")," (you can convert back and forth to JS native types)"),(0,i.kt)("li",{parentName:"ul"},"Compatibility with ",(0,i.kt)("inlineCode",{parentName:"li"},"ts-pattern")," (using ",(0,i.kt)("inlineCode",{parentName:"li"},"patterns")," we provide).")),(0,i.kt)("h2",{id:"whats-in-the-box"},"What's in the box?"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Option<Value>")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Result<Ok, Error>")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"AsyncData<Value>")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Future<Value>")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Lazy<Value>")),(0,i.kt)("li",{parentName:"ul"},"Some utils like ",(0,i.kt)("inlineCode",{parentName:"li"},"Deferred"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"Dict")," & ",(0,i.kt)("inlineCode",{parentName:"li"},"Array"))),(0,i.kt)("h2",{id:"install"},"Install"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"$ yarn add @swan-io/boxed\n")),(0,i.kt)("p",null,"or"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"$ npm install @swan-io/boxed\n")),(0,i.kt)("h2",{id:"inspirations"},"Inspirations"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://rescript-lang.org/docs/manual/latest/api/belt"},"ReScript's Belt Stdlib")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/bloodyowl/rescript-future"},"ReScript Future")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/bloodyowl/rescript-asyncdata"},"ReScript AsyncData"))))}m.isMDXComponent=!0}}]);